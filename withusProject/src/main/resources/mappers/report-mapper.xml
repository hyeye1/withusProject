<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="reportMapper">

	<resultMap id="report" type="Report" >
		<result column="report_no" property="reportNo" />
		<result column="memeber_no" property="memberNo" />
		<result column="report_content" property="reportContent" />
		<result column="report_date" property="reportDate" />
		<result column="report_status" property="reportStatus" />
		<result column="report_type" property="reportType" />
		<result column="reported_no" property="reportedNo" />
		
		<result column="member_status" property="memberStatus"/>
		<result column="report_count" property="reportCount" />
		<result column="member_name" property="memberName" />
	</resultMap>
	
	
	<select id="selectReportList" resultMap="report">
		select
		       report_no
		     , m.member_name
		     , report_content
             , m.member_status
             , to_char(report_date, 'YYYY-MM-DD') report_date
		     , report_status
		  from report r
		  join member m on (m.member_no = r.member_no)
		  order 
		     by report_date desc
	</select>
	
	<select id="selectReport" resultMap="report" parameterType="_int">
		select
		       report_no
		     , member_no
		     , report_content
		     , report_date
		     , report_status
		  from report
		 where report_no = #{reportNo}	
	</select>
	
	<insert id="insertReport" parameterType="Report">
		insert
		  into report
		  (
		    report_no
		  , member_no
		  , report_content
		  )
		  values
		  (
		    seq_rpno.nextval
		  , #{memberNo}
		  , #{reportContent}
		  )
	</insert>
	
	<update id="submitReport" parameterType="_int">
		update
		       (
		       select 
				       m.member_status
				  from report r
				  join member m on (r.member_no = m.member_no)
				 where m.member_no = #{memberNo}
				)
		   set m.member_status = 'N'
		 where report_no = #{reportNo}
	</update>
	
	<update id="resetReport" parameterType="_int">
		update
		       (
		       select 
				       m.member_status
				  from report r
				  join member m on (r.member_no = m.member_no)
				 where m.member_no = #{memberNo}
				)
		   set m.member_status = 'Y'
		 where report_no = #{reportNo}
	</update>
	
	
	
	
	<!-- 
	<select id="countSearch" resultType="_int" parameterType="hashmap">
		select
		       count(*)
		  from report r
		  join member m on (m.member_no = r.member_no)
	</select>
	 -->
	
	
	
	
</mapper>