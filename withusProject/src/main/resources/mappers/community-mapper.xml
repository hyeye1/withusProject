<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="communityMapper">

	<!-- 커뮤니티상세 -->
	<resultMap id="community" type="Community">
		<id column="commu_no" property="commuNo"/>
		<result column="commu_writer" property="commuWriter"/>
		<result column="commu_cate" property="commuCate"/>
		<result column="commu_title" property="commuTitle"/>
		<result column="commu_content" property="commuContent"/>
		<result column="commu_create" property="commuCreate"/>
		<result column="count" property="count"/>
		<result column="commu_status" property="commuStatus"/>
		<result column="commu_origin" property="commuOrigin"/>
		<result column="commu_change" property="commuChange"/>
	</resultMap>
	
	<!-- 댓글 -->
	<resultMap id="commuReply" type="CommuReply">
		<result column="com_re_no" property="comReNo"/>
		<result column="com_re_writer" property="comReWriter"/>
		<result column="com_re_content" property="comReContent"/>
		<result column="com_re_create" property="comReCreate"/>
		<result column="com_re_status" property="comReStatus"/>
		<result column="member_no" property="memberNo"/>
	</resultMap>
  
  	<!-- 커뮤리스트 조회 -->
	<select id="selectListCount" resultType="_int">
		select
		       count(*)
		  from community
		 where commu_status = 'Y'
	</select>
	
	<!-- 커뮤리스트뷰 조회 -->
	<select id="selectList" resultMap="community">
		select 
		       c.commu_no
		     , c.commu_cate
		     , c.commu_title
		     , c.commu_writer
		     , c.count
		     , to_char(c.commu_create, 'YYYY-MM-DD') commu_create
		     , m.member_id
		  from community c
		  join member m on c.commu_writer = m.member_no
		 where commu_status = 'Y'
		 order
		    by commu_no desc 
	</select>
	
	<select id="selectList1" resultMap="community">
		select 
		       c.commu_no
		     , c.commu_cate
		     , c.commu_title
		     , c.commu_writer
		     , c.count
		     , to_char(c.commu_create, 'YYYY-MM-DD') commu_create
		     , m.member_id
		  from community c
		  join member m on c.commu_writer = m.member_no
		 where commu_status = 'Y'
		   and (commu_cate like '자유')
		 order
		    by commu_no desc 
	</select>
	
	<select id="selectList2" resultMap="community">
		select 
		       c.commu_no
		     , c.commu_cate
		     , c.commu_title
		     , c.commu_writer
		     , c.count
		     , to_char(c.commu_create, 'YYYY-MM-DD') commu_create
		     , m.member_id
		  from community c
		  join member m on c.commu_writer = m.member_no
		 where commu_status = 'Y'
		   and (commu_cate like '질문')
		 order
		    by commu_no desc 
	</select>
	
	<select id="selectList3" resultMap="community">
		select 
		       c.commu_no
		     , c.commu_cate
		     , c.commu_title
		     , c.commu_writer
		     , c.count
		     , to_char(c.commu_create, 'YYYY-MM-DD') commu_create
		     , m.member_id
		  from community c
		  join member m on c.commu_writer = m.member_no
		 where commu_status = 'Y'
		   and (commu_cate like '공구모집')
		 order
		    by commu_no desc 
	</select>
	
	
	<insert id="insertCommunity" parameterType="Community">
		insert 
		  into community
		  (
		    commu_no
		  , commu_writer
		  , commu_cate
		  , commu_title
		  , commu_content
		  , commu_create
		  , commu_status
		  , commu_origin
		  , commu_change
		  )
		  values
		  (
		    SEQ_COMNO.nextval
		  , #{commuWriter}
		  , #{commuCate}
		  , #{commuTitle}
		  , #{commuContent}
		  , sysdate
		  , 'Y'
		  , #{commuOrigin}
		  , #{commuChange}
		  )
	</insert>
	
	<update id="increaseCount" parameterType="_int">
		update
		       community
		   set count = count+1
		 where commu_no = #{commuNo}
		   and commu_status = 'Y'
	</update>
	
	<select id="selectCommunity" resultMap="community" parameterType="_int">
		select
			   commu_no
			 , commu_cate
			 , commu_title
			 , commu_writer
			 , commu_origin
		     , commu_change
		     , commu_content
		     , to_char(commu_create, 'YYYY-MM-DD') commu_create
		  from community
		 where commu_no = #{commuNo}
	</select>
	
	<update id="deleteCommunity" parameterType="_int">
		update
		       community
		   set commu_status = 'N'
		 where commu_no = #{commuNo}
	</update>
	
	<update id="updateCommunity" parameterType="Community">
		update
		       community
		   set commu_content = #{commuContent}		    
		 where commu_no = #{commuNo}
	</update>
	
	 
	<!-- 댓글 -->
	<select id="selectCommuReplyList" resultMap="commuReply" parameterType="_int">
		select
		       com_re_no
		     , com_re_content
			 , com_re_writer
		     , to_char(com_re_create, 'YYYY-MM-DD') com_re_create
		  from commu_reply
		 where com_re_status = 'Y'
		  and ref_cno = #{commuNo}
		 order
		    by com_re_no desc
	</select>
	
	<insert id="insertCommuReply" parameterType="CommuReply">
		insert
		  into commu_reply
		  (
		    com_re_no
		  , com_re_content
		  , ref_cno
		  , com_re_writer
		  , member_no
		  )
		  values
		  (
		    SEQ_COMRNO.nextval
		  , #{comReContent}
		  , #{refCommuNo}
		  , #{comReWriter}
		  , #{memberNo}
		  )
	</insert>
	 
	
     <!-- 커뮤 검색기능 -->
	
	<select id="selectCommuSearchList" resultMap="community" parameterType="hashmap">
		select 
               c.commu_no
             , c.commu_writer
             , c.commu_cate
             , c.commu_title
             , c.commu_content
             , c.commu_create
             , c.count  
             , c.commu_status
             , c.commu_origin
             , c.commu_change
          from community c
         where c.commu_status = 'Y'
           <choose>
           		<when test="condition == 'commuTitle'">
           			and commu_title
           		</when>
           		<when test="condition == 'commuContent'">
           			and commu_content
           		</when>
           		<otherwise>
           			and commu_writer
           		</otherwise>
           </choose>
           		like '%' || #{keyword} || '%'           	
         order
            by c.commu_create desc
	</select>
	
	
	
	
	
	
	
  
  
</mapper>
