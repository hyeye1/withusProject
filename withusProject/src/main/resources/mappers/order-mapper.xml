<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="orderMapper">

	<resultMap type="Order" id="orderRset">
		<id column="order_no" property="orderNo"/>
		<result column="project_no" property="projectNo"/>
		<result column="member_no" property="memberNo"/>
		<result column="reward_no" property="rewardNo"/>
		<result column="pur_email" property="purEmail"/>
		<result column="order_plus" property="orderPlus"/>
		<result column="total_price" property="totalPrice"/>
		<result column="order_status" property="orderStatus"/>
		<result column="bank_name" property="bankName"/>
		<result column="bank_account" property="bankAccount"/>
		<result column="receiver_name" property="receiverName"/>
		<result column="receiver_phone" property="receiverPhone"/>
		<result column="address_no" property="addressNo"/>
		<result column="address_detail" property="addressDetail"/>
		<result column="address" property="address"/>
		<result column="shipping_status" property="shippingStatus"/>
		<result column="shipping_req" property="shippingReq"/>
		<result column="shipping_com" property="shippingCom"/>
		<result column="shipping_no" property="shippingNo"/>
		<result column="order_date" property="orderDate"/>
		<result column="order_count" property="orderCount"/>
		<result column="order_option" property="orderOption"/>
		
		<result column="supporter_name" property="supporterName"/>  <!-- 서포터이름 -->
		<result column="partner_name" property="partnerName"/>		<!-- 파트너이름 -->
		<result column="project_end_dt" property="projectEndDt"/>
		<result column="project_Title" property="projectTitle"/>
		<result column="reward_Title" property="rewardTitle"/>
		<result column="reward_price" property="rewardPrice"/>
		<result column="reward_content" property="rewardContent"/>
		<result column="card_no" property="cardNo"/>
		<result column="delivery_date" property="deliveryDate"/>
		
		<!-- 파트너 발송관리 -->
		<result column="noneShipping" property="noneShipping"/>
		<result column="readyShipping" property="readyShipping"/>
		<result column="shipping" property="shipping"/>
		<result column="doneShipping" property="doneShipping"/>
		<result column="refundShipping" property="refundShipping"/>
		<result column="dropRefund" property="dropRefund"/>
		<result column="comRefund" property="comRefund"/>
		<result column="refRefund" property="refRefund"/>
		<result column="refund_no" property="refundNo"/>
		<result column="r_changename" property="reChangeName"/>
		<result column="r_reason" property="reReason"/>
		<result column="refund_status" property="refundStatus"/>
		<result column="project_thum" property="projectThum"/>
		<result column="member_no" property="memberNo"/>
 	</resultMap>
	
	<!-- 페이징 처리 -->
	<select id="selectOrderListCount" resultType="_int">
		select
			   count(*)
		from tb_order
	</select>
	
	<!-- 주문조회 -->
	<select id="selectOrderList" resultMap="orderRset">
		select
			   order_no
		     , member_name supporter_name
             , p.project_title
             , reward_title
             , order_option
             , order_count
		     , to_char(order_date,'YYYY-MM-DD HH24:MI:SS') order_date
			 , order_status
			 , shipping_status
		  from tb_order o 
          join member using (member_no)
          full join project p on (o.project_no = p.project_no)
         join reward using (reward_no)
		 order
		    by order_no desc 
	</select>
	
	<!-- 상세조회 -->	
	<select id="selectOrderDetail" resultMap="orderRset"
            parameterType="_int">
		select 
			    o.order_no
			  , o.order_date
			  , sm.member_name supporter_name
			  , to_char(p.project_end_dt, 'YYYY-MM-DD') project_end_dt
			  , o.order_status
			  , pm.member_name partner_name
			  , p.project_title
			  , r.reward_title
			  , o.order_option
			  , o.order_count
			  , to_char(r.reward_price, '999,999,999,999') reward_price
			  , to_char(o.order_plus, '999,999,999,999') order_price
			  , to_char(o.total_price, '999,999,999,999,999,999') total_price
			  , py.card_no
			  , o.receiver_name
			  , o.address_no
			  , o.address_detail
			  , o.address
			  , o.receiver_phone
			  , o.shipping_req
			  , o.shipping_status
  			  , o.shipping_com
			  , o.shipping_no
		   from tb_order o 
		   join member sm on(o.member_no = sm.member_no)
		   join project p on(o.project_no = p.project_no)
		   join member pm on(p.member_no = pm.member_no)
           join reward r on (o.project_no = r.project_no)
	  left join pay py on(o.order_no = py.order_no)
		  where o.order_no = #{orderNo}
		    and o.reward_no = r.reward_no
	</select>
	
	<!-- 결제 취소 -->
	<update id="updateOrderCancle" parameterType="hashmap" >
		update tb_order
 		   set order_status = #{cancleBtn}
		 where order_no = #{ono}
	</update>
	
	<!-- 검색 페이징 처리 -->
	<select id="countSearch" resultType="_int" 
			parameterType="hashmap">
		select
			   count(*)
		from tb_order o 
        join member using (member_no)
		<choose>
       		<when test="orderKeyword == 'orderAll'">
       			where (order_no like '%' || #{keyword} || '%' 
       			    or member_name like '%' || #{keyword} || '%' )
       		</when>
       		<otherwise>
        	 	where ${orderKeyword} like '%' || #{keyword} || '%' 
       		</otherwise>
         </choose>
   	 	 
   	 	 <if test='odStatus != null'>
			 <choose>
		   		<when test="odStatus == 1"> and order_status = 1 </when>
		   		<when test="odStatus == 2"> and order_status = 2 </when>
		   		<when test="odStatus == 3"> and order_status = 3  </when>
			 </choose>
		 </if>
   	
   		<if test='shStatus != null'>
	 	     <choose>
			   	<when test="shStatus == 1"> and shipping_status = 1 </when>
			   	<when test="shStatus == 2"> and shipping_status = 2 </when>
			   	<when test="shStatus == 3"> and shipping_status = 3  </when>
			 </choose>
		 </if>
	</select>
	
	<!-- 검색 -->
	<select id="selectSearchOrder" resultMap="orderRset" 
			parameterType="hashmap">
		select
			   order_no
		     , member_name supporter_name
             , p.project_title
             , reward_title
             , order_option
             , order_count
		     , to_char(order_date,'YYYY-MM-DD HH24:MI:SS') order_date
			 , order_status
			 , shipping_status
		  from tb_order o 
          join member using (member_no)
          full join project p on (o.project_no = p.project_no)
         join reward using (reward_no)
         <choose>
       		<when test="orderKeyword == 'orderAll'">
       			where (order_no like '%' || #{keyword} || '%' 
       			    or member_name like '%' || #{keyword} || '%' )
       		</when>
       		<otherwise>
        	 	where ${orderKeyword} like '%' || #{keyword} || '%' 
       		</otherwise>
         </choose>
   	 	 
		 <if test='odStatus != null'>
			 <choose>
		   		<when test="odStatus == 1"> and order_status = 1 </when>
		   		<when test="odStatus == 2"> and order_status = 2 </when>
		   		<when test="odStatus == 3"> and order_status = 3  </when>
			 </choose>
		 </if>
   	
   		<if test='shStatus != null'>
	 	     <choose>
			   	<when test="shStatus == 1"> and shipping_status = 1 </when>
			   	<when test="shStatus == 2"> and shipping_status = 2 </when>
			   	<when test="shStatus == 3"> and shipping_status = 3  </when>
			 </choose>
		 </if>
		 order
		    by order_no desc
	</select>
	
	
	
	
	<!-- 사용자(파트너) -->
	<!-- 발송리스트 갯수 -->
	<select id="selectDeliveryCount" resultType="_int">
			select
			      count(*)
		     from tb_order o
		     join project p on(o.project_no = p.project_no)
		     where p.member_no = #{memberNo}
	</select>
	
	<!-- 서포터관리  -->
	<select id="selecetStatsCount" resultMap="orderRset">
	 		select
			    count(case when o.shipping_no is null then 1 end) as noneShipping 
			  , count(case when o.shipping_status = 1 then 1 end) as readyShipping
			  , count(case when o.shipping_status = 2 then 1 end) as shipping
			  , count(case when o.shipping_status = 3 then 1 end) as doneShipping
			  , count(case when o.shipping_status = 4 then 1 end) as refundShipping
			  , count(case when r.refund_status = 'S' then 1 end) as refund
			  , count(case when r.refund_status = 'Y' then 1 end) as comRefund
			  , count(case when r.refund_status = 'N' then 1 end) as refRefund
		   from tb_order o
		   full join refund r on(r.order_no = o.order_no)
		   join project p on(p.project_no = o.project_no)
		   join member m  on(m.member_no = p.member_no)
		  where m.member_no = p.member_no
		    and p.member_no = #{memberNo}
	</select>
	
	<!-- 파트너 주문현황 -->
	<select id="selectPartnerOrderList" resultMap="orderRset">
		select 
		        o.order_no
		      , m.member_name supporter_name
		      , o.order_status
		      , to_char(o.total_price,'999,999,999,999,999') total_price
              , r.reward_title
              , r.reward_content
      		  , o.order_option
      		  , o.order_count
		      , o.shipping_status
		      , o.shipping_com
		      , o.shipping_no
              , to_char(delivery_date, 'YYYY-MM-DD') delivery_date 
              , re.refund_status 
              , p.project_thum
              , p.project_no
		   from tb_order o
  		   join member m on(o.member_no = m.member_no)
 		   join reward r on(o.project_no = r.project_no)
           join project p on (o.project_no = p.project_no)
      full join refund re on(re.order_no = o.order_no) -->
 		  where p.member_no = #{memberNo}
            and o.reward_no = r.reward_no
          order
	    	  by o.order_no desc
	</select>
	
	<!-- 검색 페이징 -->
	<select id="countSearchPartOrder" resultType="_int"
			parameterType="hashmap">
		select
			      count(*)
		     from tb_order o
		     join member m on(o.member_no = m.member_no)
		full join reward r on(o.project_no = r.project_no)
           	 join project p on (o.project_no = p.project_no)
		     <choose>
	          		<when test="condition == 'all'">
	          			where (o.order_no like '%' || #{keyword} || '%' 
          			       or o.shipping_no like '%' || #{keyword} || '%'
          			       or m.member_name like '%' || #{keyword} || '%' )  
	          		</when>
					<when test="condition == 'order_no'">
						where o.order_no like '%' || #{keyword} || '%' 
					</when>
					<when test="condition == 'shipping_no'">
						where o.shipping_no like '%' || #{keyword} || '%' 
					</when>
					<when test="condition == 'member_name'">
						where m.member_name like '%' || #{keyword} || '%' 
					</when>
	          </choose>
	          <if test='shStatus != null'>
	          	<choose>
	          		<when test="shStatus == 1"> and o.shipping_status = 1 </when>
				   	<when test="shStatus == 2"> and o.shipping_status = 2 </when>
				   	<when test="shStatus == 3"> and o.shipping_status = 3  </when>
          		</choose>
	          </if>
	          <if test='odStatus != null'>
			 <choose>
		   		<when test="odStatus == 1"> and o.order_status = 1 </when>
		   		<when test="odStatus == 2"> and o.order_status = 2 </when>
		   		<when test="odStatus == 3"> and o.order_status = 3  </when>
			 </choose>
		 </if>
	      and p.member_no = #{mno}   
          and o.reward_no = r.reward_no
	</select>
	
	<!-- 검색 -->
	<select id="selectSearchPartOrder" resultMap="orderRset"
			parameterType="hashmap">
			
		select 
		        o.order_no
		      , m.member_name supporter_name
		      , o.order_status
		      , to_char(o.total_price,'999,999,999,999,999') total_price
              , r.reward_title
              , r.reward_content
      		  , o.order_option
      		  , o.order_count
		      , o.shipping_status
		      , o.shipping_com
		      , o.shipping_no
              , to_char(delivery_date, 'YYYY-MM-DD') delivery_date
              , re.refund_status
              , p.project_thum
              , p.project_no
		   from tb_order o
  		   join member m on(o.member_no = m.member_no)
 		   join reward r on(o.project_no = r.project_no)
           join project p on (o.project_no = p.project_no)
      full join refund re on(re.order_no = o.order_no)
			<choose>
          		<when test="condition == 'all'">
          			where (o.order_no like '%' || #{keyword} || '%' 
         			       or o.shipping_no like '%' || #{keyword} || '%'
         			       or m.member_name like '%' || #{keyword} || '%' ) 
          		</when>
          		<when test="condition == 'order_no'">
					where (o.order_no like '%' || #{keyword} || '%')
				</when>
				<when test="condition == 'shipping_no'">
					where (o.shipping_no like '%' || #{keyword} || '%')
				</when>
				<when test="condition == 'member_name'">
					where (m.member_name like '%' || #{keyword} || '%') 
				</when>
			</choose>
	          <if test='shStatus != null'>
	          	<choose>
	          		<when test="shStatus == 1"> and o.shipping_status = 1 </when>
				   	<when test="shStatus == 2"> and o.shipping_status = 2 </when>
				   	<when test="shStatus == 3"> and o.shipping_status = 3  </when>
          		</choose>
	          </if>
	          <if test='odStatus != null'>
				 <choose>
			   		<when test="odStatus == 1"> and o.order_status = 1 </when>
			   		<when test="odStatus == 2"> and o.order_status = 2 </when>
			   		<when test="odStatus == 3"> and o.order_status = 3  </when>
				 </choose>
		 	</if>
          and o.reward_no = r.reward_no
	      and p.member_no = #{mno}   
			 order
			    by o.order_no desc
	</select>
	
	<!-- 발송모달창 : 펀딩내역-->
	<select id="selectOrderInfo" resultMap="orderRset"
		    parameterType="_int">
		select
		        o.order_no
		      , m.member_name supporter_name
		      , o.order_option
		      , o.order_count
		      , to_char(o.total_price,'999,999,999,999,999') total_price
		      , r.reward_title
		      , r.reward_content
		      , to_char(r.reward_price,'999,999,999,999,999') reward_price
		      , o.shipping_com
     		  , o.shipping_no
		  from tb_order o
		  join member m on(o.member_no = m.member_no)
		  join reward r on(r.project_no = o.project_no)
		  where o.order_no = #{orderNo}
		  and o.reward_no = r.reward_no
	</select>
	
	<!-- 발송모달창 : 발송정보 입력 -->
	<update id="insertShippingInfo" parameterType="hashmap">
		update tb_order
		   set 
		       shipping_com = #{company}
		     , shipping_no = #{sno}
		     , shipping_status = 2
		where order_no = #{ono}
	</update>
	
	<!-- 환불모달 : 환불신청내역 조회-->
	<select id="selectRefundInfo" resultMap="orderRset"
			parameterType="_int">
		select
			    o.order_no
			  , m.member_name supporter_name
			  , r.reward_title
			  , r.reward_content
			  , o.order_option
			  , o.order_count
			  , to_char(o.total_price,'999,999,999,999,999') total_price
			  , re.refund_no
			  , re.r_reason
			  , re.r_changename
			  , re.refund_status
			  , to_char(r.reward_price,'999,999,999,999,999') reward_price
			  , to_char(o.order_plus,'999,999,999,999,999') order_plus
		   from tb_order o
		   join member m on(o.member_no = m.member_no)
		   join reward r on(o.reward_no = r.reward_no)
	  full join refund re on (o.order_no = re.order_no)
		  where o.order_no = #{orderNo}
	</select>
	
	<!-- 환불 모달 : 승인/거절 -->
	<update id="updateRefundStatus" parameterType="hashmap">
		update refund
		   set 
		   	   refund_status = #{rstatus}
		 where order_no = #{ono}  
	</update>
	
	<update id="updateOrderStatus" parameterType="hashmap">
		update tb_order
		   set 
		   <choose>
		   		<when test='rstatus == "Y"'>
			       order_status = 3
			     , shipping_status = 4
		   		</when>
		   		<when test="rstatus == 'N'.toString()">
		   			order_status = 4
		   		</when>
		   </choose>
		 where order_no = #{ono}    
	</update>
	

	
	
	
</mapper>
			    